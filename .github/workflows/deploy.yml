name: Simple DevOps CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and Push
      run: |
        docker build -t group6acr.azurecr.io/devops-advisor:latest .
        az acr login --name group6acr
        docker push group6acr.azurecr.io/devops-advisor:latest
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
    
    - name: Terraform Apply
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve -var="subscription_id=${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}"
    
    - name: Setup AKS
      run: |
        az aks get-credentials --resource-group rg-devops-group6 --name devopsa-aks
        az aks update -n devopsa-aks -g rg-devops-group6 --attach-acr group6acr
    
    - name: Deploy App
      run: |
        kubectl create namespace devops-advisor --dry-run=client -o yaml | kubectl apply -f -
        kubectl create secret generic app-secret --from-literal=OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" --from-literal=FLASK_SECRET_KEY="${{ secrets.FLASK_SECRET_KEY }}" -n devops-advisor --dry-run=client -o yaml | kubectl apply -f -
        kubectl create secret generic postgres-secret --from-literal=POSTGRES_USER="${{ secrets.POSTGRES_USER }}" --from-literal=POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" --from-literal=POSTGRES_DB="${{ secrets.POSTGRES_DB }}" -n devops-advisor --dry-run=client -o yaml | kubectl apply -f -
        sed -i "s|devopsaacr.azurecr.io|${{ secrets.EXISTING_ACR_NAME }}.azurecr.io|g" k8s_solution/api-deploy.yml
        kubectl apply -f k8s_solution/
        kubectl wait --namespace devops-advisor --for=condition=ready pod -l app=postgres --timeout=300s
        kubectl wait --namespace devops-advisor --for=condition=ready pod -l app=devops-advisor --timeout=300s
    
    - name: Get Status
      run: |
        kubectl get pods -n devops-advisor
        kubectl get svc -n devops-advisor
        echo " External IP:"
        kubectl get svc devops-advisor-lb -n devops-advisor
